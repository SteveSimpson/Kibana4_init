#!/bin/sh
#
# kibana -- startup script for kibana4
#
# chkconfig: - 85 15
# processname: kibana
# pidfile: /var/run/kibana/kibana.pid
# description: Kibana is a webui to visualize data
#
### BEGIN INIT INFO
# Provides: kibana
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop kibana
### END INIT INFO
#
#
. /etc/init.d/functions

NAME="kibana"
PIDFILE="/var/run/kibana/kibana.pid"
KIBANA_DIR="/opt/kibana"
KIBANA_USER="kibana"
NODE=${KIBANA_DIR}/node/bin/node
SERVER=${KIBANA_DIR}/src/bin/kibana.js
CONFIG_PATH="${KIBANA_DIR}/config/kibana.yml" 
NODE_ENV="production" 

grep "^pid_file: ${PIDFILE}" "${CONFIG_PATH}" &> /dev/null
if [ $? -ne 0 ] ; then
    echo Kibana not starting. 
    echo Set PID in ${CONFIG_PATH}:
    echo logfile: ${PIDFILE}
    exit 1
fi

start() {
    echo -n "Starting Kibana Daemon: "
    daemon --user ${KIBANA_USER} "CONFIG_PATH='${CONFIG_PATH}' NODE_ENV='${NODE_ENV}' ${NODE}" "${SERVER} &"
    retval=$?
    echo
    return $retval
}

stop() {
    echo -n "Shutting down Kibana Daemon: "
    killproc -p $PIDFILE $NAME
    retval=$?
    echo
    return $retval
}

check_status() {
    status -p $PIDFILE $NAME
}

check_running() {
    status -p $PIDFILE $NAME >&  /dev/null
    if [ $? -ne 0 ] ; then
        echo ${NAME} not running
        exit 1
    fi
}

check_stopped() {
    status -p $PIDFILE $NAME >&  /dev/null
    if [ $? -eq 0 ] ; then
        echo ${NAME} already running
        exit 1
    fi
}

case "$1" in
    start)
        check_stopped
        start
        ;;
    stop)
        check_running
        stop
        ;;
    status)
        checkstatus
        ;;
    restart)
        status -p $PIDFILE $NAME >&  /dev/null
        if [ $? -eq 0 ] ; then
           stop
        fi
        start
        ;;
    *)
        echo "Usage:  {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
